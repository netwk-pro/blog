# .github/workflows/publish-test.yml
#
# Copyright © 2025 Network Pro Strategies (Network Pro™)
# SPDX-License-Identifier: CC-BY-4.0 OR GPL-3.0-or-later
# This file is part of Network Pro

name: Publish to Registries

on:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  packages: write

# Allow one concurrent deployment
concurrency:
  group: 'publish'
  cancel-in-progress: true

jobs:
  check-codeql:
    uses: ./.github/workflows/check-codeql.yml

  build:
    needs: check-codeql
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Upgrade npm
        run: |
          corepack enable
          npm install -g npm@11.6.2

      - name: Install Node.js dependencies
        run: npm ci

      # Ensure MkDocs builds successfully
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: .python-version

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # Strict mode disabled for mkdocs-material
      - name: Build MkDocs documentation
        run: mkdocs build

      # Remove build artifacts
      - name: Clean build directory
        run: rm -rf build/

      # Create Git archive of version-controlled files
      - name: Create clean source archive
        run: git archive --format=tar.gz --output=clean-source.tar.gz HEAD

      - name: Upload source archive
        uses: actions/upload-artifact@v5
        with:
          name: clean-source
          path: clean-source.tar.gz

  publish-npm:
    needs: build
    runs-on: ubuntu-24.04

    steps:
      - name: Download clean source archive
        uses: actions/download-artifact@v5
        with:
          name: clean-source
          path: ./

      - name: Extract source archive
        run: tar -xzf clean-source.tar.gz

      - name: Remove extracted source archive
        run: rm clean-source.tar.gz

      - name: Set up Node.js for npmjs
        uses: actions/setup-node@v6
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
          cache: npm

      - name: Check for existence of package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "Warning: package-lock.json not found";
          fi

      - name: Upgrade npm
        run: |
          corepack enable
          npm install -g npm@11.6.2

      - name: Install Node.js dependencies
        run: npm ci

      - name: Set up Git user
        run: |
          git config --global user.email "github@sl.neteng.cc"
          git config --global user.name "SunDevil311"

      - name: Publish package to npmjs
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_NETPRO }}

  publish-gpr:
    needs: build
    runs-on: ubuntu-24.04

    steps:
      - name: Download clean source archive
        uses: actions/download-artifact@v5
        with:
          name: clean-source
          path: ./

      - name: Extract source archive
        run: tar -xzf clean-source.tar.gz

      - name: Remove extracted source archive
        run: rm clean-source.tar.gz

      - name: Set up Node.js for GPR
        uses: actions/setup-node@v6
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com/
          cache: npm

      - name: Check for existence of package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "Warning: package-lock.json not found";
          fi

      - name: Upgrade npm
        run: |
          corepack enable
          npm install -g npm@11.6.2

      - name: Install Node.js dependencies
        run: npm ci

      - name: Set up Git user
        run: |
          git config --global user.email "github@sl.neteng.cc"
          git config --global user.name "SunDevil311"

      - name: Update package name for GPR
        run: |
          sed -i 's/"name": "[^"]*"/"name": "@netwk-pro\/blog"/' package.json

      - name: Publish package to GPR
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
